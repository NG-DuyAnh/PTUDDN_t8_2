name: build and deploy spring-api
on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    name: build and deploy spring-api
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 17

      - name: Run unit tests
        run: mvn -B test --file pom.xml

      - name: SonarQube Scan
        uses: kitabisa/sonarqube-action@v1.2.0
        env:
          SONAR_SCANNER_OPTS: -X
        with:
          host: ${{ secrets.SONARQUBE_HOST }}
          login: ${{ secrets.SONARQUBE_TOKEN }}
          projectBaseDir: "src/"
          projectKey: "my-custom-project"

      - name: Build the app
        run: |
          mvn clean
          mvn -B package --file pom.xml

      - name: Build the Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          dockerfile: Dockerfile
          push: false
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/rest-api:v1.0.0

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Push the Docker image to Docker Hub
        uses: docker/build-push-action@v4
        with:
          context: .
          dockerfile: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/rest-api:v1.0.0

      - name: Install ArgoCD CLI
        run: |
          sudo curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          sudo chmod +x /usr/local/bin/argocd
          argocd version --client

      - name: ArgoCD Login & Sync
        run: |
          argocd login ${{ secrets.ARGOCD_SERVER }} --username ${{ secrets.ARGOCD_USERNAME }} --password ${{ secrets.ARGOCD_PASSWORD }} --insecure
          argocd app sync ptuddn-t6
